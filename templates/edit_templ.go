// Code generated by templ@v0.2.364 DO NOT EDIT.

package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func EditFile(file File) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<form id=\"file-edit\" hx-patch=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(file.Path))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" hx-encoding=\"multipart/form-data\" hx-target=\"main\" hx-swap=\"outerHTML\" hx-error-target=\"#file-edit-error\" hx-error-swap=\"innerHTML\" hx-ext=\"edit-file,accept-html\" hx-on:reset=\"window.onFilesReset(event)\" hx-on:htmx:xhr:progress=\"window.updateUploadProgress(event)\"><div id=\"form-file-navigation\"><progress id=\"upload-progress\" value=\"0\" max=\"100\"></progress><div><input name=\"dir\" value=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(file.Dir))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><div class=\"buttons\"><button id=\"upload-button\" type=\"submit\" class=\"btn primary\">")
		if err != nil {
			return err
		}
		var_2 := `Edit`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button><button type=\"button\" hx-get=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(file.Dir + "?action=files"))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" hx-target=\"#content\" class=\"btn secondary\">")
		if err != nil {
			return err
		}
		var_3 := `Cancel`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></div></div></div><div id=\"file-edit-error\"></div><div class=\"upload-file\"><div class=\"upload-file-icon\"><span class=\"icon icon-large file-icon\"></span></div><div class=\"upload-file-content\"><label>")
		if err != nil {
			return err
		}
		var_4 := `Name:`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</label><input name=\"name\" value=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(file.Name))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><label>")
		if err != nil {
			return err
		}
		var_5 := `Description:`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</label><textarea name=\"description\">")
		if err != nil {
			return err
		}
		var var_6 string = file.Description
		_, err = templBuffer.WriteString(templ.EscapeString(var_6))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</textarea></div></div><div class=\"file-upload\"><input type=\"file\" id=\"files\" name=\"files\" hidden hx-on:change=\"window.onFilesChange(event)\"><label for=\"files\"><div id=\"upload-icon\" class=\"icon\"></div> ")
		if err != nil {
			return err
		}
		var_7 := `Choose file or drop here.`
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</label></div></form>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
