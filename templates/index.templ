package templates

import (
    "strings"
    "time"
    "strconv"
	"path"

    "github.com/dustin/go-humanize"
    "github.com/topi314/godrive/godrive/auth"
)

type IndexVars struct {
	PathParts []string
	Files     []File
	Path      string
	BasePath  string
}

func (v IndexVars) assemblePath(i int) string {
	return strings.Join(v.PathParts[:i+1], "/")
}

templ Index(vars IndexVars, page PageVars) {
    @Page(page) {
        @IndexMain(vars, page)
    }
}

templ IndexMain(vars IndexVars, page PageVars) {
	<div id="navigation">
		<div id="navigation-checkbox">
			<input type="checkbox" id="files-select" class="checkbox" data-file={ vars.Path } autocomplete="off" hx-on:click="window.onFilesSelect(event)"/>
			<label for="files-select" class="icon"></label>
		</div>
		<div id="navigation-path">
			<a href={ templ.SafeURL(vars.BasePath) }>/</a>
			for i, part := range vars.PathParts {
				<a href={ templ.URL(path.Join(vars.BasePath, vars.assemblePath(i))) }>
					if i < len(vars.PathParts) - 1 {
						{ part + "/" }
					} else {
						{ part }
					}
				</a>
			}
		</div>
		<div class="buttons">
			<button class="btn primary" disabled?={ page.HashAuth && page.User.Name == "guest" } hx-post={ vars.Path + "?action=upload" } hx-target="main" hx-swap="innerhtml">Upload</button>
			<div id="files-more" class="dropdown disabled">
				<div class="icon-dots" role="button"></div>
				<ul>
					<li><span role="button" hx-on="click: window.onDownloadFiles(event)">Download</span></li>
					if !page.HashAuth || page.User.Name != "guest" {
						<li disabled?={ page.User.Name == "guest" }><span hx-patch={ vars.Path + "?action=move" } hx-target="main" hx-swap="innerHTML" hx-ext="selected-files-param,accept-html" role="button">Move</span></li>
						<li disabled?={ page.User.Name == "guest" }><span hx-delete={ vars.Path } hx-target="main" hx-swap="innerHTML" hx-confirm="Are you sure you want to delete the selected files?" hx-ext="selected-files-param,accept-html" role="button">Delete</span></li>
					}
				</ul>
			</div>
		</div>
	</div>
	@FileList(page.HashAuth, vars.Files)
}

templ FileList(hasAuth bool, files []File) {
	<div id="file-list" class={ "table-list", templ.KV("auth", hasAuth) }>
		<div class="table-list-header">
			<div></div>
			<div></div>
			<div>Name</div>
			<div>Size</div>
			<div>Last Updated</div>
			<div>Description</div>
			<div>Owner</div>
			<div></div>
		</div>
		for i, file := range files {
			@FileEntry(hasAuth, i, file)
		}
	</div>
}

templ FileEntry(hasAuth bool, i int, file File) {
	<div class="table-list-entry">
		<div>
			<input type="checkbox" id={ "file-select-" + strconv.Itoa(i) } class={ "file-select", "checkbox", templ.KV("folder", file.IsDir), templ.KV("file", !file.IsDir) } data-name={ file.Name } autocomplete="off" hx-on:click="window.onFileSelect(event)"/>
			<label for={ "file-select-" + strconv.Itoa(i) } class="icon"></label>
		</div>
		<div>
			<span class={ templ.KV("icon-folder", file.IsDir), templ.KV("icon-file", !file.IsDir) }></span>
		</div>
		<div hx-boost={ strconv.FormatBool(file.IsDir) }>
			<a href={ templ.URL(file.Path) }>{ file.Name }</a>
		</div>
		<div>{ humanize.IBytes(uint64(file.Size)) }</div>
		<div title={ file.Date.Format(time.DateTime) }>{ humanize.Time(file.Date) }</div>
		<div>{ file.Description }</div>
		<div title={ strings.Join(file.OwnerIDs, ", ") }>{ strings.Join(file.Owners, ", ") }</div>
		<div>
			<div class="dropdown">
				<div class="icon-dots" role="button"></div>
				<ul>
					<li><a href={ templ.URL(file.Path + "?dl=1") } target="_blank">Download</a></li>
					if file.IsDir && file.Permissions.Has(auth.PermissionDelete) {
						<li><span hx-patch={ file.Path + "?action=edit-folder" } hx-target="main" hx-swap="innerHTML" role="button">Edit</span></li>
					} else if !file.IsDir && file.Permissions.Has(auth.PermissionUpdate) {
						<li><span hx-patch={ file.Path + "?action=edit-file" } hx-target="main" hx-swap="innerHTML" role="button">Edit</span></li>
					}
					if file.Permissions.Has(auth.PermissionShare) {
						<li><span hx-post={ file.Path + "?action=share" } hx-target="main" hx-swap="innerHTML" hx-ext="accept-html" role="button">Share</span></li>
					}
					if file.Permissions.Has(auth.PermissionDelete) {
						<li><span hx-delete={ file.Path } hx-target="main" hx-swap="innerHTML" hx-confirm={ "Are you sure you want to delete " + file.Name + "?" } hx-ext="accept-html" role="button">Delete</span></li>
					}
				</ul>
			</div>
		</div>
	</div>
}